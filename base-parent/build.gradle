/*
 * This file was generated by the Gradle 'init' task.
 */


buildscript {
    ext {
        springBootVersion = '2.3.1.RELEASE'
        dependencyVersion = '1.0.9.RELEASE'
        tangoParentBomVersion = '1.0.1'
    }

    repositories {
        gradlePluginPortal()
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:$dependencyVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
    }
}

allprojects {
    group = 'com.lj.springBoot'
    version = '1.0-SNAPSHOT'

}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    // 使用springboot插件
    apply plugin: 'org.springframework.boot'
    // 版本管理插件
    apply plugin: 'io.spring.dependency-management'

    repositories {
        repositories {
            maven {
                url 'https://maven.aliyun.com/repository/public/'
            }
        }
        mavenLocal()
        mavenCentral()
    }

    jar {
        enabled = true
    }
    bootJar {
        enabled = false
    }

    dependencies {
        compile 'org.projectlombok:lombok:1.18.6'
        compile files("${System.properties['java.home']}/lib/tools.jar")

    }

    // 通用依赖
    dependencies {
        compile 'com.alibaba:fastjson:1.2.60'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.junit.jupiter:junit-jupiter:5.6.1'
    }

    sourceCompatibility = '1.8'

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from(sourceSets.main.allJava)
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
                artifact(sourcesJar)
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}
